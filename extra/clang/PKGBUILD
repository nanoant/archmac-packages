# Ported from Arch Linux:
# https://git.archlinux.org/svntogit/packages.git/plain/trunk/PKGBUILD?h=packages/clang

# Maintainer: Evangelos Foutras <evangelos@foutrelis.com>
# Contributor: Jan "heftig" Steffens <jan.steffens@gmail.com>

pkgname=clang
pkgver=9.0.0
pkgrel=1
pkgdesc="C language family frontend for LLVM"
arch=('x86_64')
url="https://clang.llvm.org/"
license=('custom:Apache 2.0 with LLVM Exception')
depends=('llvm-libs' 'compiler-rt') # 'gcc'
makedepends=('llvm' 'cmake' 'ninja' 'python3-sphinx')
optdepends=('python3: for scan-view and git-clang-format'
            'llvm: referenced by some clang headers')
provides=("clang-analyzer=$pkgver" "clang-tools-extra=$pkgver")
conflicts=('clang-analyzer' 'clang-tools-extra')
replaces=('clang-analyzer' 'clang-tools-extra')
source=(https://releases.llvm.org/$pkgver/cfe-$pkgver.src.tar.xz{,.sig}
        https://releases.llvm.org/$pkgver/clang-tools-extra-$pkgver.src.tar.xz{,.sig}
        https://releases.llvm.org/$pkgver/llvm-$pkgver.src.tar.xz{,.sig})
sha256sums=('7ba81eef7c22ca5da688fdf9d88c20934d2d6b40bfe150ffd338900890aa4610'
            'SKIP'
            'ea1c86ce352992d7b6f6649bc622f6a2707b9f8b7153e9f9181a35c76aa3ac10'
            'SKIP'
            'd6a0565cf21f22e9b4353b2eb92622e8365000a9e90a16b09b56f8157eabfe84'
            'SKIP')
validpgpkeys+=('B6C8F98282B944E3B0D5C2530FC3042E345AD05D') # Hans Wennborg <hans@chromium.org>
validpgpkeys+=('474E22316ABF4785A88C6E8EA2C794A986419D8A') # Tom Stellard <tstellar@redhat.com>

prepare() {
  cd "$srcdir/cfe-$pkgver.src"
  mkdir build
  ln -sf "$srcdir/clang-tools-extra-$pkgver.src" tools/extra
  # Avoid shipping libclang-cpp before removing BUILD_SHARED_LIBS=ON
  # sed -i '/add_clang_subdirectory(clang-shlib)/d' tools/CMakeLists.txt
}

build() {
  cd "$srcdir/cfe-$pkgver.src/build"

  # Upstream strongly recommends against BUILD_SHARED_LIBS=ON for distro
  # builds but CLANG_LINK_CLANG_DYLIB=ON is not yet supported by clang's
  # extra tools. Keep building all libraries as shared and revisit this.

  cmake .. -G Ninja \
    -DCMAKE_BUILD_TYPE=Release \
    -DCMAKE_INSTALL_PREFIX=/opt/arch \
    -DPYTHON_EXECUTABLE=/opt/arch/bin/python3 \
    -DBUILD_SHARED_LIBS=ON \
    -DLLVM_LINK_LLVM_DYLIB=ON \
    -DCLANG_LINK_CLANG_DYLIB=OFF \
    -DLLVM_ENABLE_RTTI=ON \
    -DLLVM_BUILD_TESTS=ON \
    -DLLVM_INCLUDE_DOCS=ON \
    -DLLVM_BUILD_DOCS=ON \
    -DLLVM_ENABLE_SPHINX=ON \
    -DSPHINX_WARNINGS_AS_ERRORS=OFF \
    -DLLVM_EXTERNAL_LIT=/opt/arch/bin/lit \
    -DLLVM_MAIN_SRC_DIR="$srcdir/llvm-$pkgver.src"
  ninja
}

check() {
  cd "$srcdir/cfe-$pkgver.src/build"
  # FIXME: Skip test for now to save time
  # ninja check-clang{,-tools}
}

_python3_optimize() {
  python3 -m compileall "$@"
  python3 -O -m compileall "$@"
  python3 -OO -m compileall "$@"
}

package() {
  cd "$srcdir/cfe-$pkgver.src/build"

  DESTDIR="$pkgdir" ninja install
  install -dm755               "$pkgdir/opt/arch/share/licenses/$pkgname"
  install -m644 ../LICENSE.TXT "$pkgdir/opt/arch/share/licenses/$pkgname/LICENSE"

  # Remove documentation sources
  rm -r "$pkgdir"/opt/arch/share/doc/clang{,-tools}/html/{_sources,.buildinfo}

  # Move analyzer scripts out of /opt/arch/libexec
  mv "$pkgdir"/opt/arch/libexec/{ccc,c++}-analyzer "$pkgdir/opt/arch/lib/clang/"
  rmdir "$pkgdir/opt/arch/libexec"
  # sed -i 's|libexec|lib/clang|' "$pkgdir/opt/arch/bin/scan-build"

  # Install Python bindings
  for _py in 3.7; do
    install -d "$pkgdir/opt/arch/lib/python$_py/site-packages"
    cp -a ../bindings/python/clang "$pkgdir/opt/arch/lib/python$_py/site-packages/"
    _python${_py%%.*}_optimize "$pkgdir/opt/arch/lib/python$_py"
  done

  # Compile Python scripts
  _python3_optimize "$pkgdir/opt/arch/share" -x 'clang-include-fixer|run-find-all-symbols'
}

# vim:set ts=2 sw=2 et:
